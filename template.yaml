AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  emosearch-api

  SAM Template for emosearch-api

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
      Variables:
        GOOGLE_SERVICE_ACCOUNT_KEY: ""
        AWS_ENDPOINT: ""
        TWITTER_CONSUMER_KEY: ""
        TWITTER_CONSUMER_SECRET: ""
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
      MaxAge: "'600'"
      AllowCredentials: False

Resources:
  APIFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: cmd/emosearch-api
      Handler: emosearch-api
      Runtime: go1.x
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Timeout: 10
      Events:
        CatchGet:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /v1/{proxy+}
            Method: GET
        CatchPost:
          Type: Api
          Properties:
            Path: /v1/{proxy+}
            Method: POST
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref GoogleServiceAccountKey

  UpdateSearchesBatch:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: config/statemachine/updateSearches.asl.json
      DefinitionSubstitutions:
        ListSearchesToUpdateFunctionArn: !GetAtt ListSearchesToUpdateFunction.Arn
        CollectTweetsFunctionArn: !GetAtt CollectTweetsFunction.Arn
      Events:
        Schedule:
          Type: Schedule # More info about Schedule Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-schedule.html
          Properties:
            Description: Schedule to run the update searches state machine
            Enabled: False
            Schedule: "rate(15 minutes)"
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref ListSearchesToUpdateFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CollectTweetsFunction

  ListSearchesToUpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/list-searches
      Handler: list-searches
      Runtime: go1.x
      Tracing: Active
      Timeout: 10
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref GoogleServiceAccountKey
  CollectTweetsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/collect-tweets
      Handler: collect-tweets
      Runtime: go1.x
      Tracing: Active
      Timeout: 900
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref GoogleServiceAccountKey

  GoogleServiceAccountKey:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: GoogleServiceAccountKey
      SecretString:
        PleaseInputByAdmin

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldAPI:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  APIFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt APIFunction.Arn
  APIFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt APIFunctionRole.Arn
